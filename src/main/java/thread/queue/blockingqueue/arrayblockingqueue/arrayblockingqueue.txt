ArrayBlockingQueue
1.基于数组的阻塞队列实现
	在ArrayBlockingQueue内部，维护了一个定长数组以便缓存队列中的数据对象，这是一个常用的阻塞队列，
	除了一个定长数组外，ArrayBlockingQueue内部还保存着两个整形变量，分别标识着队列的头部和尾部在数组中的位置。
	
2.ArrayBlockingQueue在生产者放入数据和消费者获取数据，都是共用同一个锁对象，由此也意味着两者无法真正并行运行，这点尤其不同于LinkedBlockingQueue；
	按照实现原理来分析，ArrayBlockingQueue完全可以采用分离锁，从而实现生产者和消费者操作的完全并行运行。
	Doug Lea之所以没这样去做，也许是因为ArrayBlockingQueue的数据写入和获取操作已经足够轻巧，以至于引入独立的锁机制，除了给代码带来额外的复杂性外，其在性能上完全占不到任何便宜。
	
3.ArrayBlockingQueue和LinkedBlockingQueue间还有一个明显的不同之处在于，
1).前者在插入或删除元素时不会产生或销毁任何额外的对象实例，而后者则会生成一个额外的Node对象。
	这在长时间内需要高效并发地处理大批量数据的系统中，其对于GC的影响还是存在一定的区别。
2).而在创建ArrayBlockingQueue时，我们还可以控制对象的内部锁是否采用公平锁，默认采用非公平锁。